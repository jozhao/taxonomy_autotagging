<?php

// load the helper file
module_load_include('inc', 'taxonomy_autotagging', 'includes/taxonomy_autotagging.lib');
module_load_include('inc', 'taxonomy_autotagging', 'includes/taxonomy_autotagging.batch');

/**
 * Implements hook_help().
 */
function taxonomy_autotagging_help($section) {
	switch ($section) {
		case 'admin/help#search' :
			return t ( 'Automatically analysis and process the nodes text by matching the terms (and synonyms) against the content of textual fields.' );
	}
}

/**
 * implements hook_form_FORMID_alter().
 */
function taxonomy_autotagging_form_field_ui_field_edit_form_alter(&$form, $form_state) {
	if ($form ['#field'] ['type'] != 'taxonomy_term_reference')
		return;
	$form ['taxonomy_autotagging'] = array (
			'#type' => 'fieldset',
			'#title' => t ( 'Taxonomy Auto Tagging' ),
			'#description' => t ( 'Automatically analysis the nodes text by matching the taxonomy terms.' ),
			'taxonomy_autotagging_active' => array (
					'#type' => 'radios',
					'#title' => t ( 'Active/Disactive the Taxonomy Auto Tagging' ),
					'#description' => t ( 'Autocategorise will assume that the last, heaviest term is the <em>misc</em>, or <em>other</em> category' ),
					'#options' => array (
							'0' => t ( 'Disactive' ),
							'1' => t ( 'Active' )
					),
					'#default_value' => isset ( $form ['#instance'] ['settings'] ['taxonomy_autotagging_active'] ) ? $form ['#instance'] ['settings'] ['taxonomy_autotagging_active'] : 0
			),
			'taxonomy_autotagging_case' => array (
					'#type' => 'checkbox',
					'#title' => t ( 'Case sensitive' ),
					'#description' => t ( 'Default setting is case insensitive, and the text will be conveted to lower case before matching.' ),
					'#default_value' => isset ( $form ['#instance'] ['settings'] ['taxonomy_autotagging_case'] ) ? $form ['#instance'] ['settings'] ['taxonomy_autotagging_case'] : 0
			),
			'taxonomy_autotagging_run' => array (
					'#type' => 'submit',
					'#value' => t ( 'Run the taxonomy auto tagging' ),
					'#suffix' => '<span class="description">' . t ( 'Could take time and could put an increased load on your server.' ) . '</span>'
			)
	);
	$form ['#submit'] [] = '_taxonomy_autotagging_settings_form_submit';
}

/**
 * form callback to update the configurations
 * @param $form
 * @param $form_state
 */
function _taxonomy_autotagging_settings_form_submit($form, &$form_state) {
	$instance = &$form_state ['values'] ['instance'];
	$instance ['settings'] ['taxonomy_autotagging_active'] = $form_state ['values'] ['taxonomy_autotagging_active'];
	$instance ['settings'] ['taxonomy_autotagging_case'] = $form_state ['values'] ['taxonomy_autotagging_case'];
	field_update_instance ( $instance );

	if ($form_state ['values'] ['op'] == t ( 'Run the taxonomy auto tagging' )) {
		_taxonomy_autotagging_process_all ( $instance );
	}
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 * add taxonomy autotagging fields into the form
 */
function taxonomy_autotagging_form_node_form_alter(&$form, &$form_state) {
    $field_info = field_info_instances();
    foreach ($field_info['node'][$form['type']['#value']] as $field) {
        if (isset($field['settings']['taxonomy_autotagging_active']) && $field['settings']['taxonomy_autotagging_active'] == '1') {
            $field_autotag = $field;
            $form[$field_autotag['field_name']]['taxonomy_autotagging_active'] = array(
                '#type' => 'radios',
                '#title' => t('Enable Taxonomy Auto Tagging with this vocabulary in this node?'),
                '#default_value' => '1',
                '#options' => array(t('Disabled'), t('Enabled')),
            );
        }
    }
    $form['#submit'][] = '_taxonomy_autotagging_node_form_submit';
}

/**
 * node form callback to update the taxonomy auto tagging setting for single node
 * @param $form
 * @param $form_state
 */
function _taxonomy_autotagging_node_form_submit($form, &$form_state) {
    $op = $form_state['values']['op'];
    if ($op == 'Save') {
        // prepare the taxonomy autotagging fields
        $field_info = field_info_instances();
        foreach ($field_info['node'][$form['type']['#value']] as $field) {
            if (isset($field['settings']['taxonomy_autotagging_active']) && $field['settings']['taxonomy_autotagging_active'] == '1') {
                $taxonomy_autotagging_field_config[] = array(
                    'field_name' => $field['field_name'],
                    'entity_type' => $field['entity_type'],
                    'bundle' => $field['bundle'],
                    'active' => $form_state['values'][$field['field_name']]['taxonomy_autotagging_active'],
                );
            }
        }
        // prepare the node id, language etc then save them into database
        if (is_array($taxonomy_autotagging_field_config) && !empty($taxonomy_autotagging_field_config)){
            $nid = $form_state['values']['nid'];
            $language = $form_state['values']['language'];
            // @todo save the instance into database
            dvm($nid);
            dvm($language);
            dvm($taxonomy_autotagging_field_config);
        }
    }
}